/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package kafka.react.consumer;

import react.HibernateClient;
import io.vertx.core.Vertx;
import io.vertx.core.VertxOptions;
import io.vertx.ext.web.Router;
import io.vertx.micrometer.MicrometerMetricsOptions;
import io.vertx.micrometer.PrometheusScrapingHandler;
import io.vertx.micrometer.VertxPrometheusOptions;


public class App {

    public static void main(String[] args) {

        var hibernateClient = HibernateClient.init();
        var kafkaReader = new KafkaReader(hibernateClient);

        MicrometerMetricsOptions metricsOptions =
                new MicrometerMetricsOptions()
                        .setPrometheusOptions(new VertxPrometheusOptions().setEnabled(true))
                        .setEnabled(true);

        VertxOptions options = new VertxOptions().setMetricsOptions(metricsOptions);

        Vertx vertx = Vertx.vertx(options);
        Router router = Router.router(vertx);

        // Route for Prometheus scraping
        router.route("/metrics").handler(new MetricsHandler());
        router.route("/metricsV").handler(PrometheusScrapingHandler.create());


        // Start the HTTP server
        vertx.createHttpServer().requestHandler(router).listen(8080, http -> {
            if (http.succeeded()) {
                System.out.println("HTTP server started on port 8080");
                kafkaReader.start();
            } else {
                http.cause().printStackTrace();
            }
        });
    }
}
